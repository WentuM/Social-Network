name: devops


on:
 push:
   branches:
     - 'master'
 pull_request:
   branches:
     - 'master'
jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Push notify
        if: ${{ github.event_name == 'push' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.actor }} just pushed ${{ github.ref }} into ${{ github.repository }} with comment "${{ github.event.head_commit.message }}"
            ${{ github.event.compare }}
      
      - name: PR notify
        if: ${{ github.event_name == 'pull_request' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.actor }} just opened PR in ${{ github.repository }} with comment "${{github.event.pull_request.title}}"
            ${{ github.event.pull_request.html_url }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Docker Up
        run: docker-compose -f docker-compose.db.yml up -d
      - name: Build with Maven
        run: mvn install
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: actions/checkout@v2
      - name: Build image
        run: docker image build . --file deploy/python/Dockerfile --tag WentuM/Social-Network:1.0.0
      - name: Push image
        run: docker image push WentuM/Social-Network:1.0.0

  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    needs:
      - build
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 8
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Docker Up
        run: docker-compose -f docker-compose.db.yml up -d
      - name: Run Tests
        run: mvn -B test

  deployment:
    runs-on: self-hosted
    needs: tests
    steps:
      - name: Pulling app
        uses: actions/checkout@v3

      - name: Stoping containers
        run: docker-compose stop

      - name: Removing containers
        run: docker-compose rm -f

      - name: Starting container
        run: docker-compose up --build -d
